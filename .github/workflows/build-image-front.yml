name: Build Front image
run-name: Build Front docker image

on:
  push:
    tags:
      - '1.*'
      - 'v1.*'
      - 'dev-*'

jobs:
  quasar-build:
    uses: ./.github/workflows/build-front.yml
    with:
      working-dir: .
      docker-build: true

  quasar-build-image:
    needs: quasar-build
    runs-on: ubuntu-latest

    steps:
      - name: Download dist-spa artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-spa
          path: ./dist-spa

      - name: Download Dockerfile artifact
        uses: actions/download-artifact@v4
        with:
          name: Dockerfile
          path: . # ou ./docker si tu veux

      - name: Download Nginx config artifact
        uses: actions/download-artifact@v4
        with:
          name: Nginx-conf
          path: ./nginx

      - name: Set Tag to Env
        env:
          EVENT_CONTEXT: ${{ toJSON(github.event.ref) }}
        run: echo "GITHUB_TAG=$(echo $EVENT_CONTEXT | cut -d '/' -f 3 | cut -d '"' -f 1)" >> $GITHUB_ENV

      - name: Build docker
        run: docker build -f ./Dockerfile  -t ${{ secrets.SCW_REGISTRY}}/a10cfront:${{env.GITHUB_TAG}} .

      - name: Docker push
        run: |
          docker login ${{ secrets.SCW_REGISTRY}} -u nologin --password-stdin <<< ${{ secrets.SCW_SECRET_KEY}}
          docker push ${{ secrets.SCW_REGISTRY}}/a10cfront:${{env.GITHUB_TAG}}

  semantic-release:
    needs: quasar-build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      - run: npm ci
      - run: npx semantic-release
