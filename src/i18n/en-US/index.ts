// This is just an example,
// so you can safely delete all default props below

export default {
  app_title: 'A10C Perf calculator(for DCS) - by Cerppo',
  failed: 'Action failed',
  success: 'Action was successful',
  wind_direction_0_360: 'Wind direction must be between 0 and 360',
  loadout: 'Loadout',
  takeoff: 'Takeoff',
  landing: 'Landing',
  flight: 'Flight',
  brief: 'Brief',
  about: 'About',
  change_language: 'passer en ',
  runway: 'Runway',
  export_kneeboard: 'Export kneeboard',
  wind: {
    label: 'Wind',
    Neutral: 'Neutral',
    Head: 'Head',
    Tail: 'Tail',
    CrossLeft: 'Cross Left',
    CrossRight: 'Cross Right',
  },


  drag: 'Drag',
  weapons: 'Weapons',
  gun_ammo: 'Gun ammo',
  fuel_qty: 'Fuel quantity',
  empty_weight: 'Empty weight',
  config_name: 'Config name',
  sym_load: 'symmetrical load',

  airport: {
    information: 'Airport information',
    elevation: 'Airport Elevation (ft)',
    runway_length: 'Runway length (ft)',
    runway_qfu: 'Runway QFU (deg)',
    wind_direction: 'Wind direction',
    wind_direction_help: 'Enter wind direction in degrees (0-360)',
    wind_speed: 'Wind speed',
    wind_speed_help: 'Enter wind speed in knots',
    temperature: 'Temperature',
    temperature_help: 'DCS Temperature in brief is for sea level. Remove 2°C every 1000 feets.',
    pressure: 'Pressure',
    pressure_altitude: 'Pressure altitude',
    pressure_qnh: 'QNH',
    pressure_qnh_unit_hpa: 'hPa',
    pressure_qnh_unit_inhg: 'inHg',
  },
  takeoff_info: {
    info: 'Takeoff information',
    flaps: 'Flaps',
    ptfs_help: 'Fan speed should be checked after approximately 1,000 feet on takeoff roll.',
    takeoff_weight: 'Takeoff weight',
    rotate_speed: 'Rotate speed',
    takeoff_speed: 'Takeoff speed',
    takeoff_index: 'Takeoff index (max thrust)',
    takeoff_index_help: 'TakeOff Index is displayed in case you want to read charts.',
    taxi_fuel: 'Taxi fuel (100 lbs/10 min)',
    taxi_fuel_help: '(300 pounds/30 minutes) and a worst case fuel consumption of 200 pounds for takeoff and acceleration to climb speed.',
    ground_run: 'Ground run',
    fifty_feet_clearance: '50 feet obstacle clearance',
    critical_field_length: 'Critical field length',
    enter_runway_length: 'Enter runway length',

  },
  runway_condition: {
    label: 'Runway condition',
    dry: 'Dry',
    wet: 'Wet',
    icy: 'Icy',
  },
  flight_phase: {
    phase: 'Phase',
    summary: 'Flight summary',
    reserve: 'Fuel reserve (lbs)',
    mission_range: 'Mission range (NM)',
    cruise_alt: 'Cruise Alt.',
    optimum_cruise_alt: 'Opti. Cruise Alt.',
    distance: 'Distance',
    duration: 'Duration',
    duration_minutes: 'Duration (minutes)',
    fuel_used: 'Fuel used',
    std_day_temp_dev: 'STD day T°. dev.',
    bingo_fuel: 'Bingo',

    TAKEOFF: 'Taxi & Take Off',
    CLIMB: 'Climb',
    CRUISE: 'Cruise',
    'HI_COMBAT': 'Hi Combat',
    REFUEL: 'Refuel',
    DESCENT: 'Descent',
    LANDING: 'Landing',

    wind_direction: 'Wind direction',
    wind_speed: 'Wind speed',
    leg_course: 'Leg course',
    course_valid: 'Course must be between 0 and 360',

    starting_weight: 'S. Weight',
    efob: 'EFOB',
    starting_altitude: 'Start. Alt.',
    ending_altitude: 'End. Alt.',
    fuel_flow: 'Fuel flow',
    altitude: 'Altitude',
    drag: 'Drag',
    bingo: 'Bingo',
    remove_last: 'Remove last',
    quantity_refuelled: 'Qty refueled(lbs)',
    greater_than_zero: 'must be greater than 0 .Or check fuel',

    optimum: {
      climb_speed: 'Speed (x1000ft : IAS) : [SL: 200, 5: 195, 10: 190, 15: 185, 20: 180]',
      combat_ff: 'Combat FF at 250 KIAS',
      std_day_temp_dev: 'STD Day dev is',
      speed_max_range: 'Speed for max range is {speed} KIAS ( Idle, SB closed)',
      speed_max_range_help: 'Fuel, time and distance for Penetration descent: 80 % core RPM, 200 KIAS, SB opened 40% ',
    },
    alt_must_be_lower: 'Altitude must be lower than original to descent',
    alt_must_be_higher: 'Altitude must be higher than original to climb',

  },
  landing_info: {
    copy_takeoff_params: 'Copy takeoff params',
    gross_weight: 'Gross weight',
    gross_weight_validator: 'Gross weight must be greater than empty weight and lower than max landing weight',
    single_engine: 'Single engine',
    speed_brakes: 'Speed brakes',
    minimum_run: 'Minimum run',
    minimum_run_help: 'Check to see minimum distance and speed to achieve minimum runway length.',
    final_approach_speed: 'Final approach speed',
    touch_down_speed: 'Touch down speed',
    ground_roll: 'Ground roll',
    landing_index: 'Landing index',
    landing_index_help: 'Landing Index is displayed in case you want to read charts.',
  },

  brief_page: {
    fuel: 'Fuel',
    ammo: 'Ammo',
    takeoff_weight: 'Poids au décollage',


  }



};
